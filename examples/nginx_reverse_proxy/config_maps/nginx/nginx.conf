worker_processes 5;

# Hack if you run in openshift
error_log /dev/fd/2 info;

# Hack to run at openshift
pid /tmp/nginx.pid;

events {
    worker_connections 2048;
}

http {
    gzip on;

    # Hack to run at openshift
    client_body_temp_path /tmp 1 2;
    proxy_temp_path /tmp 1 2;
    fastcgi_temp_path /tmp 1 2;
    uwsgi_temp_path /tmp 1 2;
    scgi_temp_path /tmp 1 2;

{{- if $.Values.exporter_proxy.useCache }}
    proxy_cache_path /tmp/nginx_cache levels=1:2
                keys_zone=exporter_cache:10m
                max_size=10m
                inactive=20m
                use_temp_path=off;
{{ end }}

    log_format log-with-cache-info   '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent $request_time '
                         '$upstream_cache_status $upstream_response_time '
                         '"$http_referer" "$http_user_agent"';

    access_log /dev/fd/1 log-with-cache-info flush=3s buffer=64k;   

    server {
        listen 9000;

{{- if $.Values.exporter_proxy.useCache }}
        proxy_cache_lock on;
        proxy_cache_revalidate off;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_ignore_headers Cache-Control;
        proxy_cache_valid any 5s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_cache exporter_cache;
{{ end }}

        location /nginx_status {
          stub_status;
        }

{{- range $brokerName, $broker := .Values.broker }}
        location /{{ $brokerName }}/broker {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.Version={{ urlquery $broker.vpnFilter }}|*&m.Health={{ urlquery $broker.vpnFilter }}|*&m.Spool={{ urlquery $broker.vpnFilter }}|*&m.Redundancy={{ urlquery $broker.vpnFilter }}|*&m.ConfigSyncRouter={{ urlquery $broker.vpnFilter }}|*;
{{- if $.Values.exporter_proxy.useCache }}
            proxy_cache_key "{{ $brokerName }}_solace_broker_std";
            proxy_cache_valid any 5s;
{{ end }}
            proxy_pass_request_body off;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location /{{ $brokerName }}/std {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.Vpn={{ urlquery $broker.vpnFilter }}|*&m.VpnReplication={{ urlquery $broker.vpnFilter }}|*&m.ConfigSyncVpn={{ urlquery $broker.vpnFilter }}|*&m.Bridge={{ urlquery $broker.vpnFilter }}|*&m.VpnSpool={{ urlquery $broker.vpnFilter }}|*;
{{- if $.Values.exporter_proxy.useCache }}
            proxy_cache_key "{{ $brokerName }}_solace_vpn_std";
            proxy_cache_valid any 5s;
{{ end }}
            proxy_pass_request_body off;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location /{{ $brokerName }}/stats {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.ClientStats={{ urlquery $broker.vpnFilter }}|*&m.VpnStats={{ urlquery $broker.vpnFilter }}|*&m.BridgeStats={{ urlquery $broker.vpnFilter }}|*&m.QueueStats={{ urlquery $broker.vpnFilter }}|*&m.ClusterLinks={{ urlquery $broker.vpnFilter }}|*;
{{- if $.Values.exporter_proxy.useCache }}
            proxy_cache_key "{{ $brokerName }}_solace_vpn_stats";
            proxy_cache_valid any 10s;
{{ end }}
            proxy_pass_request_body off;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location /{{ $brokerName }}/det {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.QueueDetails={{ urlquery $broker.vpnFilter }}|*;
{{- if $.Values.exporter_proxy.useCache }}
            proxy_cache_key "{{ $brokerName }}_solace_vpn_det";
            proxy_cache_valid any 5m;
{{ end }}
            proxy_pass_request_body off;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location ~ ^/{{ $brokerName }}/queue_stats/(.*)$ {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.QueueStats={{ urlquery $broker.vpnFilter }}|$1;
            proxy_pass_request_body off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location ~ ^/{{ $brokerName }}/det/(.*)$ {
            proxy_method POST;
            proxy_pass http://solace-exporter:1920/solace?m.QueueDetails={{ urlquery $broker.vpnFilter }}|$1;
            proxy_pass_request_body off;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            proxy_set_body scrapeURI={{ urlquery $broker.sempUrl }}&username={{ urlquery $broker.sempUsername}}&password={{ urlquery $broker.sempPassword}};
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }
{{ end }}    
    }
}